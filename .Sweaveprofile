### Emacs: -*- mode: R; -*-
##
## Copyright (C) 2019 Vincent Goulet
##
## Ce fichier fait partie du projet
## «Programmer avec R»
## https://gitlab.com/vigou3/programmer-avec-r
##
## Cette création est mise à disposition sous licence
## Attribution-Partage dans les mêmes conditions 4.0
## International de Creative Commons.
## https://creativecommons.org/licenses/by-sa/4.0/

## Longueur des lignes pour l'affichage avec Sweave
options(width = 52)

###
### getSourceName()
###
##  Extraire le nom du fichier source utilisé dans la commande
##  'Sweave' qui appelle cette fonction.
##
##  Valeur
##
##  Nom du fichier sous forme de chaine de caractères
##
getSourceName <- function()
{
    args <- commandArgs(TRUE)

    ## Quand Sweave est appelé avec l'argument 'encoding="utf-8"', sur
    ## le fichier 'foo.Rnw', l'objet 'args' est une chaine de
    ## caractères de la forme
    ##
    ##   nextArg--encoding=utf-8nextArgfoo.Rnw
    ##
    ## Il s'agit d'extraire 'foo.Rnw' de cette chaine.
    args <- strsplit(args, 'nextArg', fixed = TRUE)[[1L]]
    tail(args, 1L)
}

###
### postStangle(file, ...)
###
##  Effectuer le traitement nécessaire dans le fichier 'foo-suffix.R'
##  après l'étape Stangle effectuée sur 'foo.Rnw':
##
##  - supprimer "-suffix" dans le nom du fichier et, possiblement,
##    changer l'extension ".R" pour autre chose;
##  - activer les expressions invalides désactivées car elles auraient
##    causé problème dans Sweave.
##  - supprimer les lignes blanches insérées par Stangle;
##
##  Arguments
##
##  file: nom du fichier .Rnw
##  ...: arguments additionnels passés à 'renameTangled'
##
##  Valeur
##
##  La valeur de 'system(..., intern = FALSE).
##
postStangle <- function(file, ...)
{
    script <- renameTangled(file, ...)
    if (!is.character(script))
        stop("error renaming the script file")
    processLines(script)
    cleanup(file)
}

###
### renameTangled(file, suffix, new.ext = ".R")
###
##  Supprimer le suffixe "-suffix" du nom du fichier produit par
##  Stangle sur le fichier 'file' et changer l'extension du fichier
##  de ".R" à "new.ext".
##
##  Arguments
##
##  file: nom du fichier .Rnw
##
##  Valeur
##
##  Si l'opération réussit: le nom du nouveau fichier; sinon: FALSE
##
renameTangled <- function(file, suffix, new.ext = ".R")
{
    filebase <- sub(".Rnw", "", file)
    script <- paste0(filebase, new.ext)
    out <- file.rename(paste0(filebase, "-", suffix, ".R"), script)
    if (out)
        out <- script
    out
}

###
### processLines(file)
###
##  Effectuer avec 'sed' les opérations de «nettoyage» suivantes sur
##  le fichier de script produit par Stangle:
##
##  - activer les expressions désactivées par les marques de
##    commentaires spéciales '##-!-';
##  - supprimer une des deux lignes blanches entre chaque bloc de code.
##
##  Arguments
##
##  file: nom du fichier .R
##
##  Valeur
##
##  La valeur de 'system(..., intern = FALSE)'.
##
processLines <- function(file)
{
    cmd <- paste("sed -E -i ''",
                 "-e 's/##-!-[ ]?//'",
                 "-e 'N;/^\\n$/D;P;D;'",
                 file)
    system(cmd)
}

###
### cleanup(file)
###
##  Supprimer les fichiers de la forme foo-001.R, foo-002.R, etc.
##  créés par Stangle sur le fichier foo.Rnw.
##
##  Arguments
##
##  file: nom du fichier .Rnw
##
##  Valeur
##
##  Comme 'system(..., intern = FALSE)': invisible(0) si tous les
##  fichiers ont été supprimés; invisible(127) et un avertissement
##  sinon.
##
cleanup <- function(file)
{
    filebase <- sub(".Rnw", "", file)
    pat <- paste0(filebase, "-[0-9]{3}", ".R")
    scripts <- list.files(pattern = pat)
    ok <- file.remove(scripts)
    if (all(ok))
        invisible(0)
    else
    {
        warning(paste(file(s), scripts[!ok], "not removed"))
        invisible(127)
    }
}
