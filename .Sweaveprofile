### Emacs: -*- mode: R; -*-
##
## Copyright (C) 2019 Vincent Goulet
##
## Ce fichier fait partie du projet
## «Programmer avec R»
## https://gitlab.com/vigou3/programmer-avec-r
##
## Cette création est mise à disposition sous licence
## Attribution-Partage dans les mêmes conditions 4.0
## International de Creative Commons.
## https://creativecommons.org/licenses/by-sa/4.0/

## Longueur des lignes pour l'affichage avec Sweave
options(width = 52)

###
### getSourceName()
###
##  Extrait le nom du fichier source utilisé dans la commande 'Sweave'.
##
##  Valeur
##
##  Nom du fichier sous forme de chaine de caractères
##
getSourceName <- function()
{
    args <- commandArgs(TRUE)
    args <- strsplit(args, 'nextArg', fixed = TRUE)[[1L]]
    tail(args, 1L)
}

###
### postStangle(file)
###
##  Effectue le traitement nécessaire après l'étape Stangle:
##
##  - suppression de "-script" dans le nom du fichier de script;
##  - suppression de lignes blanches;
##  - activation d'expressions invalides qui auraient causé problème
##    dans Sweave.
##  Arguments
##
##  file: nom du fichier .Rnw
##
##  Valeur
##
##  Si l'opération réussit: le nom du nouveau fichier; sinon: FALSE
postStangle <- function(file)
{
    script <- renameTangled(file)
    if (is.character(script))
        processLines(script)
    else
        stop("error renaming the script file")
}

###
### renameTangled(file)
###
##  Supprime le suffixe "-script" du nom du fichier produit par
##  Stangle sur le fichier 'file'.
##
##  Arguments
##
##  file: nom du fichier .Rnw
##
##  Valeur
##
##  Si l'opération réussit: le nom du nouveau fichier; sinon: FALSE
##
renameTangled <- function(file)
{
    filebase <- sub(".Rnw", "", file)
    script <- paste0(filebase, ".R")
    out <- file.rename(paste0(filebase, "-script.R"), script)
    if (out)
        out <- script
    out
}

###
### processLines(file)
###
##  Effectue avec 'sed' les opérations de «nettoyage» suivantes sur le
##  fichier de script produit par Stangle:
##
##  - supprime une des deux lignes blanches entre chaque bloc de code;
##  - active les expressions déactivées par les marques de
##    commentaires spéciales '##!'
##
##  Arguments
##
##  file: nom du fichier .R
##
##  Valeur
##
##  La valeur de 'system'.
##
processLines <- function(file)
{
    cmd <- paste("sed -E -i ''",
                 "-e 's/##![ ]//'",
                 "-e 'N;/^\\n$/D;P;D;'",
                 file)
    system(cmd)
}
