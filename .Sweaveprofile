### Emacs: -*- mode: R; -*-
##
## Copyright (C) 2019 Vincent Goulet
##
## Ce fichier fait partie du projet
## «Programmer avec R»
## https://gitlab.com/vigou3/programmer-avec-r
##
## Cette création est mise à disposition sous licence
## Attribution-Partage dans les mêmes conditions 4.0
## International de Creative Commons.
## https://creativecommons.org/licenses/by-sa/4.0/

## Longueur des lignes pour l'affichage avec Sweave
options(width = 52)

###
### getSourceName()
###
##  Extraire le nom du fichier source utilisé dans la commande
##  'Sweave' qui appelle cette fonction.
##
##  Valeur
##
##  Nom du fichier sous forme de chaine de caractères
##
getSourceName <- function()
{
    args <- commandArgs(FALSE)

    ## Si Sweave est lancé à partir de
    ##
    ##   R -e "Sweave('foo.Rnw', ...)"
    ##
    ## l'expression se retrouve parmi les arguments et il s'agit
    ## ensuite d'en extraire le nom du fichier.
    if (length(cmd <- grep("Sweave\\(", args, value = TRUE)))
        return(regmatches(cmd,
                          regexpr("(?<=Sweave\\(['\"]).*(?=['\"])",
                                  cmd, perl = TRUE)))

    ## Si Sweave est lancé à partir de
    ##
    ##   R CMD Sweave --encoding="utf-8" foo.Rnw
    ##
    ## l'argument qui contient l'information utile est une chaine de
    ## caractères de la forme
    ##
    ##   nextArg--encoding=utf-8nextArgfoo.Rnw
    ##
    ## Les arguments sont dans l'ordre qu'ils ont été entrés à la
    ## ligne de commande.
    if (length(cmd <- grep("^nextArg", args, value = TRUE)))
        return(grep("^--|^$", strsplit(cmd, 'nextArg', fixed = TRUE)[[1L]],
                    invert = TRUE, value = TRUE))
}

###
### postStangle(file, ...)
###
##  Effectuer le traitement nécessaire dans le fichier 'file-suffix.R'
##  après l'étape Stangle effectuée sur 'file.Rnw':
##
##  - supprimer "-suffix" dans le nom du fichier et, possiblement,
##    changer l'extension ".R" pour autre chose;
##  - activer les expressions invalides désactivées car elles auraient
##    causé problème dans Sweave.
##  - supprimer les lignes blanches insérées par Stangle;
##
##  Arguments
##
##  file: nom du fichier .Rnw
##  ...: arguments additionnels passés à 'renameTangled'
##
##  Valeur
##
##  La valeur de 'system(..., intern = FALSE).
##
postStangle <- function(file, ...)
{
    script <- renameTangled(file, ...)
    if (!is.character(script))
        stop("error renaming the script file")
    processLines(script)
}

###
### renameTangled(file, suffix, new.ext = ".R",
###               remove.suffix = !keep.suffix, keep.suffix = FALSE)
###
##  Supprimer (ou conserver) le suffixe "-suffix" du nom du fichier
##  produit par Stangle sur le fichier 'file' et changer l'extension
##  du fichier de ".R" à "new.ext".
##
##  Arguments
##
##  file: nom du fichier .Rnw.
##  suffix: suffixe à supprimer (ou conserver).
##  new.ext: nouvelle extension (avec le point) du fichier renommé.
##  remove.suffix: booléen; si TRUE le suffixe est supprimé du fichier
##                 créé par Stangle.
##  keep.suffix: booléen; si TRUE seul le suffixe du fichier créé par
##               Stangle est conservé.
##
##  Valeur
##
##  Si l'opération réussit: le nom du nouveau fichier; sinon: FALSE
##
renameTangled <- function(file, suffix, new.ext = ".R",
                          remove.suffix = !keep.suffix, keep.suffix = FALSE)
{
    basefile <- sub(".Rnw", "", file)
    script <- if (remove.suffix)
                  paste0(basefile, new.ext)
              else
                  paste0(suffix, new.ext)
    out <- file.rename(paste0(basefile, "-", suffix, ".R"), script)
    if (out)
        out <- script
    out
}

###
### processLines(file)
###
##  Effectuer avec 'sed' les opérations de «nettoyage» suivantes sur
##  le fichier de script produit par Stangle:
##
##  - activer les expressions désactivées par les marques de
##    commentaires spéciales '##-!-';
##  - supprimer une des deux lignes blanches entre chaque bloc de code.
##
##  Arguments
##
##  file: nom du fichier .R
##
##  Valeur
##
##  La valeur de 'system2(..., stdout = FALSE)'.
##
processLines <- function(file)
{
    args <- c("-E -i ''",
              "-e 's/##-!- ?//'",
              "-e 'N;/^\\n$/D;P;D;'",
              file)
    system2("sed", args, stdout = FALSE)
}
